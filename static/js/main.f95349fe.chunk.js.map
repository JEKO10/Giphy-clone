{"version":3,"sources":["components/Loader.js","components/Paginate.js","components/Giphy.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","Paginate","props","pageNumber","i","Math","ceil","total","itemsPer","push","map","item","active","currentPage","onClick","selectedPage","href","api","Giphy","useState","trending","setTrending","isLoading","setIsLoading","setCurrentPage","itemsPage","indexOfLast","indexOfFirst","currentItems","slice","fetchTrending","a","fetch","response","json","data","console","log","useEffect","length","src","images","fixed_height","url","alt","id","Search","searchData","setSearchData","query","setQuery","fetchSearch","type","placeholder","onChange","e","target","value","preventDefault","func","state","App","searched","setSearched","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f95349fe.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <i className=\"fas fa-circle-notch fa-4x fa-spin\"></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nfunction Paginate(props) {\r\n  const pageNumber = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(props.total / props.itemsPer); i++) {\r\n    pageNumber.push(i);\r\n  }\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <ul className=\"pagination\">\r\n        {pageNumber.map((item) => {\r\n          let active = \"\";\r\n          if (item === props.currentPage) {\r\n            active += \"active\";\r\n          }\r\n          return (\r\n            <li className={active}>\r\n              <a\r\n                className={active}\r\n                onClick={() => {\r\n                  props.selectedPage(item);\r\n                }}\r\n                href=\"!#\"\r\n              >\r\n                {item}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Paginate;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"./Loader\";\r\nimport Paginate from \"./Paginate\";\r\n\r\nconst api = {\r\n  base: \"https://api.giphy.com/v1/gifs/\",\r\n  key: \"Orrjo8OK56xS6F5tlU1dRG3fPzrO2agN\",\r\n};\r\n\r\nfunction Giphy() {\r\n  const [trending, setTrending] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPage, setItemsPage] = useState(10);\r\n  const indexOfLast = currentPage * itemsPage;\r\n  const indexOfFirst = indexOfLast - itemsPage;\r\n  const currentItems = trending.slice(indexOfFirst, indexOfLast);\r\n\r\n  const fetchTrending = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(`${api.base}trending?api_key=${api.key}`);\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setTrending(data.data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTrending();\r\n  }, []);\r\n\r\n  const renderTrending = () => {\r\n    if (isLoading) {\r\n      return <Loader />;\r\n    }\r\n    return currentItems.map((item) => {\r\n      return (\r\n        <div key={item.id} className=\"gif\">\r\n          <img src={item.images.fixed_height.url} alt=\"GIF\" />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const selectedPage = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paginate\r\n        currentPage={currentPage}\r\n        itemsPer={itemsPage}\r\n        total={trending.length}\r\n        selectedPage={selectedPage}\r\n      />\r\n      <h1>Trending</h1>\r\n      <div className=\"container\">{renderTrending()}</div>;\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Giphy;\r\n","import React, { useState } from \"react\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst api = {\r\n  base: \"https://api.giphy.com/v1/gifs/\",\r\n  key: \"Orrjo8OK56xS6F5tlU1dRG3fPzrO2agN\",\r\n};\r\n\r\nfunction Search(props) {\r\n  const [searchData, setSearchData] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fetchSearch = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(\r\n        `${api.base}search?&api_key=${api.key}&q=${query}`\r\n      );\r\n      const data = await response.json();\r\n      //   console.log(data);\r\n      setSearchData(data.data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const renderSearch = () => {\r\n    if (isLoading) {\r\n      return <Loader />;\r\n    }\r\n    return searchData.map((item) => {\r\n      return (\r\n        <div key={item.id} className=\"gif\">\r\n          <img src={item.images.fixed_height.url} alt=\"GIF\" />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <section className=\"search\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for gifs...\"\r\n          onChange={(e) => {\r\n            setQuery(e.target.value);\r\n          }}\r\n          value={query}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            fetchSearch();\r\n            setQuery(\"\");\r\n            props.func(true);\r\n          }}\r\n        >\r\n          <img src=\"https://giphy.com/static/img/search-icon.svg\" alt=\"IMG\" />\r\n        </button>\r\n      </section>\r\n\r\n      {props.state ? (\r\n        <div className=\"container\">\r\n          {!isLoading && searchData.length === 0 ? (\r\n            <h1 id=\"error\">Oops! Thereâ€™s nothing here.</h1>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {renderSearch()}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport Giphy from \"./components/Giphy\";\nimport Search from \"./components/Search\";\nimport Paginate from \"./components/Paginate\";\n\nfunction App() {\n  const [searched, setSearched] = useState(false);\n  return (\n    <main>\n      <Search func={setSearched} state={searched} />\n      <Paginate />\n      {searched ? null : <Giphy />}\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}